
auth_command:
    command: |
        set -eu -o pipefail
#        if ! command -v ./vendor/bin/drush >/dev/null ; then echo "Please make sure your project contains drush, ddev composer require drush/drush" && exit 1; fi
#        ssh-add -l >/dev/null || ( echo "Please 'ddev auth ssh' before running this command." && exit 1 )


db_pull_command:
    command: |
        # set -x   # You can enable bash debugging output by uncommenting
        set -eu -o pipefail
        ./vendor/bin/drush @remote.prod sql:dump -y -v --create-db --extra-dump=--no-tablespaces --skip-tables-list=cache,cache_* --result-file= > ./.ddev/.downloads/db.sql

files_import_command:
    command: |
        #set -x   # You can enable bash debugging output by uncommenting
        set -eu -o pipefail
        ./vendor/bin/drush rsync @remote.prod:%files @self:%files -v -y        

# push is a dangerous command. If not absolutely needed it's better to delete these lines.
db_push_command:
    command: |
        # set -x   # You can enable bash debugging output by uncommenting
        set -eu -o pipefail
        echo "No"

# push is a dangerous command. If not absolutely needed it's better to delete these lines.
# TODO: This is a naive, Drupal-centric push, which needs adjustment for the mount to be pushed.
files_push_command:
    command: |
        # set -x   # You can enable bash debugging output by uncommenting
        set -eu -o pipefail
        echo "No"
